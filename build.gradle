plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
    id "io.freefair.lombok" version "6.0.0-m2"
}

group = 'ru.ya.olganow'
version = '1.0-SNAPSHOT'


allure {
    report {
        version.set("2.27.0")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.27.0")
            }
        }
    }
}


repositories {
    mavenCentral()
}

def restAssuredVersion = "5.3.1",
    allureVersion = "2.21.0",
    selenideVersion = "7.6.1",
    slf4jVersion = "2.0.7",
    javafakerVersion = "1.0.2",
    jupiterVersion = "5.10.0",
    assertjVersion = "3.24.2",
        ownerVersion = "1.0.12"

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "com.github.javafaker:javafaker:$javafakerVersion",
            'io.qameta.allure:allure-selenide:2.27.0',
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "org.junit.jupiter:junit-jupiter:$jupiterVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "org.aeonbits.owner:owner:$ownerVersion")
    runtimeOnly 'org.aspectj:aspectjweaver:1.9.22.1'

}
tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task web(type: Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}

task api(type: Test) {
    useJUnitPlatform {
        includeTags("api")
    }
}